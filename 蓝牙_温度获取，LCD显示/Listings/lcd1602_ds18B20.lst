C51 COMPILER V9.54   LCD1602_DS18B20                                                       04/30/2022 01:39:15 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602_DS18B20
OBJECT MODULE PLACED IN .\Objects\lcd1602_ds18B20.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE lcd1602_ds18B20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\lcd1602_ds18B20.lst) OBJECT(.\Objects\lcd1602_ds18B20.obj)

line level    source

   1          #include "lcd1602_ds18B20.h"
   2          #include <reg52.h>
   3          #include <intrins.h>
   4          
   5          sbit RS = P3^5; 
   6          sbit RW = P3^6; 
   7          sbit EN = P3^4; 
   8          
   9          sbit DQ = P2^2;  //1-wire总线的数据传输线
  10          void delay(uint n)
  11          {
  12   1              uint i,j;
  13   1              for(i = 0;i<114;i++)
  14   1                      for(j=0;j<n;j++);
  15   1      }
  16          
  17          void delay_us(uint us){//进入函数，使用11us，执行一次，使用6us左右。
  18   1              while(us>0){
  19   2                      us--;
  20   2              }
  21   1      }
  22          
  23          //LCD1602函数部分
  24          //判断液晶屏是否空闲
  25          void readStates(){
  26   1              uchar flag = 0;
  27   1              P0 = 0xff; //把P0寄存器（即D0-D7）拉高。
  28   1              RS = 0;  //指令选择
  29   1              RW = 1;  //读选择
  30   1              do{
  31   2                      EN = 1;  //使能
  32   2                      flag = P0;  //把数据口赋值给flag，判断flag第八位(D7)是否为0，为0则空闲退出循环。
  33   2                      EN = 0;
  34   2              }while(flag & 0x80);
  35   1      }
  36          
  37          void writeCmd(uchar cmd){
  38   1              //每次发出指令前判断器件是否空闲
  39   1              readStates();
  40   1              RS = 0;
  41   1              RW = 0;
  42   1              P0 = cmd;
  43   1              EN = 1;
  44   1              EN = 0;//指令发送完之后拉低。两次使能信号改变语句之间间隔在时序规定的最大值之内
  45   1      }       
  46          
  47          void writeData(uchar dat){
  48   1              readStates();
  49   1              RS = 1;  //选择数据
  50   1              RW = 0;  //写
  51   1              P0 = dat; 
  52   1              EN = 1;
  53   1              EN = 0;//使能保持150ns
  54   1      }
C51 COMPILER V9.54   LCD1602_DS18B20                                                       04/30/2022 01:39:15 PAGE 2   

  55          
  56          //DS18B20函数部分
  57          bit initCmd(){
  58   1              bit flag;
  59   1              DQ = 1;
  60   1              _nop_(); //一开始为高电平
  61   1              DQ = 0;
  62   1              delay_us(80);  //保持480us以上
  63   1              DQ = 1;
  64   1              delay_us(2); //释放总线后保持一段时间，约25us左右，等待器件发出存在信号。
  65   1              flag = !DQ;  //如果存在，DQ为0，让函数返回1.    
  66   1              delay_us(15);  //保持60us以上
  67   1              DQ = 1;
  68   1              _nop_();  //不使用总线的时候，都要把它拉高。给延时和开始一样，让他稳定。
  69   1              return flag;
  70   1      }       
  71          
  72          void oWireWrite(uchar cmd){
  73   1              uint i;
  74   1              //拉低总线至少1us，产生一个写时序。
  75   1              //如果写入0，拉低总线60-120us,如果写1，在15us之内拉高。两次写入之间隔1us至少。
  76   1              for(i = 0;i<8;i++){
  77   2                      DQ = 0;
  78   2                      _nop_(); //产生一个写时序。
  79   2                      if(cmd & 0x01){
  80   3                              //写1时序
  81   3                              DQ = 1;  //在15us之内拉高总线
  82   3                      }       
  83   2                      else{
  84   3                              DQ = 0;
  85   3                              //写0时序
  86   3                      }
  87   2                      delay_us(10);
  88   2                      cmd >>= 1;
  89   2                      DQ = 1; //释放总线
  90   2                      _nop_();  //两次写周期的间隔时间。
  91   2              }       
  92   1      }
  93          
  94          uchar readByteFromOWire(){
  95   1              uchar dat = 0;
  96   1              uchar pos = 0x01;
  97   1              uint i;
  98   1              for(i=0;i<8;i++){
  99   2                      DQ = 0;
 100   2                      _nop_();  //拉低总线至少1us。产生读时序。
 101   2                      DQ = 1; //释放总线
 102   2                      _nop_();  //让总线电平稳定。
 103   2                      if(DQ){//采样
 104   3                              dat = dat | pos; //读到了1 ,另一种用法：dat = (DQ << 7) | (dat >> 1)
 105   3                      }
 106   2                      //如果DQ是0就不用管了
 107   2                      pos <<= 1;
 108   2                      delay_us(10);  //读完后延时。一次读周期至少要60us以上。
 109   2                      DQ = 1; //然后释放总线,准备下一次读
 110   2                      _nop_();  //两次读周期延时
 111   2              }
 112   1              return dat;
 113   1      }
 114          
 115          void LCD1602Init(){
 116   1              //设置显示指令。
C51 COMPILER V9.54   LCD1602_DS18B20                                                       04/30/2022 01:39:15 PAGE 3   

 117   1              writeCmd(0x38); 
 118   1              writeCmd(0x0c);
 119   1              //开显示指令
 120   1              writeCmd(0x01); //清屏指令
 121   1              //数据指针设置
 122   1              writeCmd(0x06);
 123   1      }
 124          
 125          void SendString(uchar * s){
 126   1              uchar * ptr = s;
 127   1              writeCmd(0x80);
 128   1              while(*ptr){
 129   2                      writeData(*ptr);
 130   2                      ptr++;
 131   2              }
 132   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    272    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
