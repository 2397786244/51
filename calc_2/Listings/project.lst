C51 COMPILER V9.54   PROJECT                                                               02/03/2022 18:55:23 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE PROJECT
OBJECT MODULE PLACED IN .\Objects\project.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE project.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\pro
                    -ject.lst) OBJECT(.\Objects\project.obj)

line level    source

   1          /**
   2          *@brief
   3          * 计算器 ,运算符显示在点阵屏上。
   4          ***/
   5          #include<reg52.h>
   6          #include<intrins.h>
   7          #include<stdlib.h>
   8          
   9          typedef unsigned int uint;
  10          typedef unsigned char uchar;
  11          
  12          uchar code table[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
  13          uint code num_key[16] = {1,2,3,0,4,5,6,0,7,8,9,0,0,0,0,0};
  14          uint code pos[4] = {0xfe, 0xfd, 0xfb,0xf7};
  15          uint wei=0;
  16          //最左边四位显示数字。
  17          //使用矩阵键盘，数码管，点阵屏。
  18          
  19          //首先定义数码管
  20          sbit DU = P2^6;
  21          sbit WE = P2^7;
  22          //矩阵键盘使用P3IO口
  23          //sbit DIO = P3^4;      //14脚
  24          //sbit S_CLK = P3^5; //11脚
  25          //sbit R_CLK = P3^6;    //12脚
  26          //点阵屏
  27          uint answer=0; //连续按下的按键形成的数值。
  28          uint key_press_cnt=0; //按下次数的统计
  29          uint calc_type = 0; //3 + 7 - 11 * 15 /
  30          uint number1=0; //按下运算符号键，answer存到number1里。
  31          //按下等于，显示结果。 14 = 
  32          uint value = 0; //按键对应的数值。
  33          uint res=0; //显示的数值。
  34          //函数原型
  35          void display(uint n);
  36          void delay(uint n);
  37          void keyscan();
  38          void timerInit();
  39          
  40          void delay(uint n){
  41   1              uint i,j;
  42   1              for(i=0;i<n;i++)
  43   1                      for(j=0;j<114;j++);
  44   1      }
  45          
  46          //如果函数返回1，则得到的是求值。
  47          void keyscan(){
  48   1              //先进行列检测。
  49   1              P3 = 0xF0;
  50   1              if(0xF0!=P3){
  51   2                      delay(11);//软件消抖
  52   2                      if(0xF0!=P3)
  53   2                      {
  54   3                              switch(P3)
C51 COMPILER V9.54   PROJECT                                                               02/03/2022 18:55:23 PAGE 2   

  55   3                              {
  56   4                                      case 0xE0: value = 0;break;
  57   4                                      case 0xD0: value = 1;break;
  58   4                                      case 0xB0: value = 2;break;
  59   4                                      case 0x70: value = 3;break;
  60   4                              }       
  61   3                      }
  62   2                      //进行行检测
  63   2                      P3 = 0x0F;
  64   2                      switch(P3){
  65   3                              case 0x0E:value += 0;break;
  66   3                              case 0x0D:value += 4;break;
  67   3                              case 0x0B:value += 8;break;
  68   3                              case 0x07:value += 12;break;
  69   3                      }
  70   2                      key_press_cnt++;
  71   2                      
  72   2                      if(14==value){
  73   3                              key_press_cnt--;
  74   3                      }
  75   2                      if(key_press_cnt>2)
  76   2                      {       
  77   3                              answer=0;
  78   3                              key_press_cnt = 1;
  79   3                      }
  80   2                      //如果按了2次。再按下的时候让answer = 0
  81   2                      if((value!=3)&&(value!=7)&&(value!=11)&&(value!=15)&&(value!=14))
  82   2                      {
  83   3                              answer = answer * 10 + num_key[value];
  84   3                              res = answer;
  85   3                      }
  86   2                      while(0x0F!=P3); //松手检测
  87   2                      }
  88   1              //把value的值转换为数字。
  89   1              //这样的话在点击S21之前，把所有按下的值放在answer里。
  90   1      }
  91          void timerInit(){
  92   1              EA= 1;
  93   1              ET0 = 1;//定时器0允许中断
  94   1              TR0 = 1; //定时器启动
  95   1              TMOD = 0x01; //16位模式，使用定时器0
  96   1              TH0 = 0xed;
  97   1              TL0 = 0xff;   //定时5ms，从第60927次开始。
  98   1              ET1 = 1;
  99   1              TR1 = 1;
 100   1              TMOD |= 0x10;
 101   1              TH1 = 0xdb;
 102   1              TL1 = 0xff; //定时器1用于检查运算符号的按下，= 号的按下。
 103   1              //定时10ms
 104   1      }
 105          void timer0() interrupt 1{
 106   1              //定时器0
 107   1              TH0 = 0xed;
 108   1              TL0 = 0xff;
 109   1              display(res);
 110   1      }
 111          void timer1() interrupt 3 {
 112   1              TH0 = 0xdb;
 113   1              TL0 = 0xff;
 114   1              switch(value)
 115   1              {
 116   2                      case 3:number1 = res;answer = 0;key_press_cnt = 0;calc_type = 1;value = 0;break; // +
C51 COMPILER V9.54   PROJECT                                                               02/03/2022 18:55:23 PAGE 3   

 117   2                      case 7:number1 = res;answer = 0;key_press_cnt = 0;calc_type = 2;value = 0;break; // -
 118   2                      case 11:number1 = res;answer = 0;key_press_cnt = 0;calc_type = 3; value = 0;break;//*
 119   2                      case 15:number1 = res;answer = 0;key_press_cnt = 0;calc_type = 4; value = 0;break;// /
 120   2              }
 121   1              if(14==value)
 122   1              {
 123   2                      switch(calc_type){
 124   3                              case 1: res = number1 + answer; calc_type = 0;break;
 125   3                              case 2: res = number1 - answer; calc_type = 0;break;
 126   3                              case 3: res = number1 * answer; calc_type = 0;break;
 127   3                              case 4: res = number1 / answer; calc_type = 0;break;
 128   3                              default:break;
 129   3                      }
 130   2                      key_press_cnt = 0;
 131   2                      answer = 0;
 132   2                      value = 0;
 133   2              }       
 134   1      }
 135          
 136          void display(uint n){
 137   1              uint qian;
 138   1              uint bai;
 139   1              uint shi;
 140   1              uint ge;
 141   1              uint num_len;
 142   1              qian = n/1000;
 143   1              bai = n /100 % 10;
 144   1              shi = n /10 % 10;
 145   1              ge = n%10;
 146   1              if(qian){
 147   2                      num_len = 4;
 148   2              }
 149   1              else if(bai){
 150   2                      num_len = 3;
 151   2              }
 152   1              else if(shi){
 153   2                      num_len = 2;
 154   2              }
 155   1              else{
 156   2                      num_len = 1;
 157   2              }
 158   1              P0 = 0xff;
 159   1              WE = 1;
 160   1              P0 = pos[wei];
 161   1              WE = 0;
 162   1              switch(wei){
 163   2                      case 0 : DU = 1;P0 = (num_len<4) ? 0x00 : table[qian];DU = 0;break;
 164   2                      case 1 : DU = 1;P0 = (num_len<=2) ? 0x00 : table[bai];DU = 0;break;
 165   2                      case 2 : DU = 1;P0 = (1==num_len) ? 0x00 : table[shi];DU = 0;break;
 166   2                      case 3 : DU = 1;P0 = table[ge];DU = 0;break;
 167   2              }
 168   1              wei++;
 169   1              if(4==wei){
 170   2                      wei = 0;
 171   2              }
 172   1      }
 173          
 174          void main(){
 175   1              timerInit();
 176   1              while(1){
 177   2                      keyscan();
 178   2              }
C51 COMPILER V9.54   PROJECT                                                               02/03/2022 18:55:23 PAGE 4   

 179   1      }
 180          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    968    ----
   CONSTANT SIZE    =     50    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
